apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // disabling lint checks because of Thrift dependency
    lintOptions {
        disable 'InvalidPackage'
    }
}

repositories {
    mavenCentral()
}

ext {
    segmentVersion = "[4.0.0,)"
    engineVersion = "[11.0.0,13.0.0["
    utilsVersion = "[1.0.0,)"

    artifact = "segment-engine"
    libraryVersion = "1.0.0"
}

dependencies {
    implementation 'com.android.support:support-annotations:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    api "com.factual:integration-utils:${utilsVersion}"
    api "com.segment.analytics.android:analytics:${segmentVersion}"
    api "com.factual:engine-sdk:${engineVersion}"
}

// local repo
install {
    repositories {
        mavenInstaller {
            pom {
                project {
                    groupId 'com.factual.engine.segment'
                    artifactId artifact
                    version libraryVersion

                    name 'SegmentEngine'
                    description 'Segment Analytics and Factual Engine Integration'
                    url 'https://github.com/Factual/engine-segment-integration-android'
                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'factual'
                            name 'Factual, Inc.'
                        }
                    }
                }
            }
        }
    }
}

// external repo
uploadArchives {
    repositories {
        def deployRepoUrl = System.getenv('DEPLOY_REPO_URL') ?: ''
        def deployRepoUser = System.getenv('DEPLOY_REPO_USER') ?: ''
        def deployRepoPass = System.getenv('DEPLOY_REPO_PASS') ?: ''

        mavenDeployer {
            repository(url: deployRepoUrl) {
                authentication(userName: deployRepoUser, password: deployRepoPass)
            }
            pom = install.repositories.mavenInstaller.pom
        }
    }
}
